name: CI/CD Pipeline

on:
  push:
    branches:
      - 'feature/**'

  pull_request:
    branches:
      - main

jobs:

  run-tests:
    name: Run Tests and Static Analysis
    runs-on: ubuntu-latest
    env:
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      ACCESS_TOKEN_SECRET_KEY: ${{ secrets.ACCESS_TOKEN_SECRET_KEY }}
      REFRESH_TOKEN_SECRET_KEY: ${{ secrets.REFRESH_TOKEN_SECRET_KEY }}
      ALGORITHM: ${{ secrets.ALGORITHM }}
      MINIO_ROOT_USER: ${{ secrets.MINIO_ROOT_USER }}
      MINIO_ROOT_PASSWORD: ${{ secrets.MINIO_ROOT_PASSWORD }}
      MINIO_BUCKET: ${{ secrets.MINIO_BUCKET }}
      MINIO_ENDPOINT: ${{ secrets.MINIO_ENDPOINT }}
      ENV: "TEST"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build backend image
        run: docker build -t lowry-simplified:latest ./backend

      - name: Run backend container
        run: |
          docker run -d \
            --name backend \
            -e POSTGRES_DB=$POSTGRES_DB \
            -e POSTGRES_USER=$POSTGRES_USER \
            -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD \
            -e POSTGRES_HOST=$POSTGRES_HOST \
            -e POSTGRES_PORT=$POSTGRES_PORT \
            -e ACCESS_TOKEN_SECRET_KEY=$ACCESS_TOKEN_SECRET_KEY \
            -e REFRESH_TOKEN_SECRET_KEY=$REFRESH_TOKEN_SECRET_KEY \
            -e ALGORITHM=$ALGORITHM \
            -e MINIO_ROOT_USER=$MINIO_ROOT_USER \
            -e MINIO_ROOT_PASSWORD=$MINIO_ROOT_PASSWORD \
            -e MINIO_BUCKET=$MINIO_BUCKET \
            -e MINIO_ENDPOINT=$MINIO_ENDPOINT \
            -e ENV=$ENV \
            lowry-simplified:latest \
            tail -f /dev/null

      - name: Run Static Analysis
        run: docker exec backend flake8

      - name: Run tests inside container
        run: docker exec backend pytest --maxfail=1 --disable-warnings
